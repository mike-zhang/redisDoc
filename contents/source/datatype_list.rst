
列表类型
-----------
列表类型（list）可以存储一个有序的字符串列表，常用的操作是向列表两端添加元素，或者获得列表的某一个片段。

列表类型内部是使用双向链表（double linked list）实现的，所以向列表两端添加元素的时间复杂度为O(1)，获取越接近两端的元素速度就越快。
这意味着即使是一个有几千万个元素的列表，获取头部或尾部的10条记录也是极快的（和从只有20个元素的列表中获取头部或尾部的10条记录的速度是一样的）。

这种特性使列表类型能非常快速地完成关系数据库难以应付的场景：
如社交网站的新鲜事，我们关心的只是最新的内容，使用列表类型存储，
即使新鲜事的总数达到几千万个，获取其中最新的100条数据也是极快的。
同样因为在两端插入记录的时间复杂度是O(1)，列表类型也适合用来记录日志，可以保证加入新日志的速度不会受到已有日志数量的影响。

常用命令如下：

* LPUSH
向列表的左边增加元素，返回增加元素后列表的长度
::
    
    LPUSH key value[ value..]

* RPUSH
向列表的右边增加元素
::
    
    RPUSH key value[ value..]

* LPOP
从列表左边移除一个元素，并返回该元素值
::
    
    LPOP key
    
* RPOP
从列表的右侧移除一个元素，并返回该元素值
::
    
    RPOP key
    
* LLEN
返回列表元素个数，键不存在时返回0
::

    LLEN key

* LRANGE
获取列表片段，start和stop支持负数，-1表示右数第一个
::

    LRANGE key start stop

* LREM
删除列表中指定的值，返回删除的元素个数
::

    LREM key count value

* LINDEX 
获取指定索引元素值
::
    
    LINDEX key index

* LSET 
设置指定索引的元素值
::
    
    LSET key index value
    
* LTRIM 
只保留列表指定片段，删除其他元素
::
    
    LTRIM key start end
    


其它命令参考官方手册 ： http://redis.io/commands#list
